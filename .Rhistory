comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(fit2$p.value[,comparison], "BH"),
EffectSize = fit2$coefficients[,comparison])
return(result.comparison)
})
lapply(fit2, function(x) {
print(x)
comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(fit2$p.value[,comparison], "BH"),
EffectSize = fit2$coefficients[,comparison])
return(result.comparison)
})
lapply(fit2, function(x) {
print(colnames(x$coefficients))
comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(x$p.value[,comparison], "BH"),
EffectSize = x$coefficients[,comparison])
return(result.comparison)
})
lapply(fit2, function(x) {
print(colnames(x[['coefficients']]))
comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(x$p.value[,comparison], "BH"),
EffectSize = x$coefficients[,comparison])
return(result.comparison)
})
lapply(fit2, function(x) {
print(colnames(x['coefficients']))
comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(x$p.value[,comparison], "BH"),
EffectSize = x$coefficients[,comparison])
return(result.comparison)
})
lapply(fit2, function(x) {
x['coefficients']
comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(x$p.value[,comparison], "BH"),
EffectSize = x$coefficients[,comparison])
return(result.comparison)
})
lapply(fit2, function(x) {
print(x['coefficients'])
comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(x$p.value[,comparison], "BH"),
EffectSize = x$coefficients[,comparison])
return(result.comparison)
})
fit2$coefficients
lapply(fit2, function(x) {
print(x)
comparison <- colnames(x$coefficients)
result.comparison <- data.frame(p.value = x$p.value[,comparison],
q.Value = p.adjust(x$p.value[,comparison], "BH"),
EffectSize = x$coefficients[,comparison])
return(result.comparison)
})
View(fit2)
lapply(fit2, function(x) {
print(x)
})
lapply(fit2, function(x) {
print(x$coefficients)
})
lapply(fit2, function(x) {
print(x$['coefficients'])
})
lapply(fit2, function(x) {
print(x['coefficients'])
})
lapply(fit2, function(x) {
print(x[['coefficients']])
})
lapply(fit2, function(x) {
print(x[[coefficients]])
})
lapply(fit2, function(x) {
print(x[coefficients])
})
lapply(fit2, function(x) {
print(x['coefficients'])
})
for (i in fit2) {
print(i)
}
for (i in fit2$coefficients) {
print(i)
}
for (i in colnames(fit2$coefficients)) {
print(i)
}
#of n lys van al die dataframes
lys = list()
for (i in colnames(fit2$coefficients)) {
result.i <- data.frame(#gene.name = names(fit2$coefficients[,i]),
p.Value = fit2$p.value[,i],
q.Value = p.adjust(fit2$p.value[,i], "BH"),
EffectSize = fit2$coefficients[,i])
lys[i] = result.i
}
View(lys)
lys[["T1-T2"]]
#of n lys van al die dataframes
lys = list()
for (i in colnames(fit2$coefficients)) {
result.i <- data.frame(#gene.name = names(fit2$coefficients[,i]),
p.Value = fit2$p.value[,i],
q.Value = p.adjust(fit2$p.value[,i], "BH"),
EffectSize = fit2$coefficients[,i])
lys[[i]] = result.i
}
View(lys)
lys[["T1-T2"]]
d <- read.delim("E:\\James\\Collaborations\\Caroline Beltran\\Caroline_TMT.txt\\txt\\analysis")
d <- read.delim("E:\\James\\Collaborations\\Caroline Beltran\\Caroline_TMT.txt\\txt\\analysis")
setwd("C:/Users/Eigenaara/Desktop")
d <- read.delim(file = "PCA_dat.txt", header = T)
View(d)
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
colnames(d) <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
View(d)
pcaDat <- prcomp(t(d))
View(d)
sapply(d, function(x) {
print(x)
})
d <- gsub(",", "." d)
d <- gsub(",", ".", d)
pcaDat <- prcomp(t(d))
d <- as.data.frame(gsub(",", ".", d))
View(d)
sapply(names(d), function(x) {
print(d[x])
})
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
colnames(d) <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
sapply(names(d), function(x) {
print(x)
})
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
sapply(names(d), function(x) {
print(x)
})
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
d <- sapply(names(d), function(x) {
d$x <- as.numeric(gsub(",", ".", d[x]))
return(d)
})
View(d)
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
d <- sapply(names(d), function(x) {
d$x <- as.numeric(gsub(",", ".", d[[x]]))
return(d)
})
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
d <- sapply(names(d), function(x) {
d$x <- as.numeric(gsub(",", ".", d[[x]]))
return(d)
})
sapply(names(d), function(x) {
d[[x]] <- as.numeric(gsub(",", ".", d[[x]]))
return(d)
})
sapply(names(d), function(x) {
d[[x]] <- as.numeric(gsub(",", ".", d[[x]]))
})
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
sapply(names(d), function(x) {
d[[x]] <- as.numeric(gsub(",", ".", d[[x]]))
})
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
apply(apply(d, 2, gsub, patt=",", replace="."), 2, as.numeric)
d <- apply(apply(d, 2, gsub, patt=",", replace="."), 2, as.numeric)
View(d)
d <- read.delim(file = "PCA_dat.txt", header = T)
rownames(d) <- d$T..Majority.protein.IDs
d$T..Gene.names <- NULL
d$T..Majority.protein.IDs <- NULL
d <- as.data.frame(apply(apply(d, 2, gsub, patt=",", replace="."), 2, as.numeric))
View(d)
colnames(d) <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
pcaDat <- prcomp(t(d))
View(pcaDat)
pcaDat[["x"]]
ggplot(pcaDat, aes_all(PC1, PC2, fill = ID )) +
geom_point(pch=22, color = 'black')
library(ggplot2)
ggplot(pcaDat, aes_all(PC1, PC2, fill = ID )) +
geom_point(pch=22, color = 'black')
pcaDat <- prcomp(t(d))
pcaDat <- as.data.frame(pcaDat$x)
pcaDat$ID <- rownames(pcaDat)
ggplot(pcaDat, aes_all(PC1, PC2, fill = ID )) +
geom_point(pch=22, color = 'black')
ggplot(pcaDat, aes(PC1, PC2, fill = ID )) +
geom_point(pch=22, color = 'black')
View(pcaDat)
View(pcaDat)
pcaDat <- prcomp(t(d))
pcaDat <- as.data.frame(pcaDat$x)
pcaDat$ID <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
ggplot(pcaDat, aes(PC1, PC2, fill = ID )) +
geom_point(pch=21, color = 'black')
ggplot(pcaDat, aes(PC1, PC2, fill = ID )) +
geom_point(pch=21, color = 'black', size = 4)
pcaDat <- prcomp(d)
pcaDat <- as.data.frame(pcaDat$x)
pcaDat$ID <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
ggplot(pcaDat, aes(PC1, PC2, fill = ID )) +
geom_point(pch=21, color = 'black', size = 4)
d <- as.data.frame(apply(apply(d, 2, gsub, patt=",", replace="."), 2, as.numeric))
colnames(d) <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
pcaDat <- prcomp(d)
pcaDat <- as.data.frame(pcaDat$x)
pcaDat$ID <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
View(pcaDat)
d <- as.data.frame(apply(apply(d, 2, gsub, patt=",", replace="."), 2, as.numeric))
colnames(d) <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
pcaDat <- prcomp(t(d), center = TRUE)
pcaDat <- as.data.frame(pcaDat$x)
pcaDat$ID <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
ggplot(pcaDat, aes(PC1, PC2, fill = ID )) +
geom_point(pch=21, color = 'black', size = 4)
colnames(d) <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
pcaDat <- prcomp(t(d), center = FALSE, scale. = TRUE)
pcaDat <- as.data.frame(pcaDat$x)
pcaDat$ID <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
ggplot(pcaDat, aes(PC1, PC2, fill = ID )) +
geom_point(pch=21, color = 'black', size = 4)
d <- as.data.frame(apply(apply(d, 2, gsub, patt=",", replace="."), 2, as.numeric))
colnames(d) <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
pcaDat <- prcomp(t(d), center = TRUE, scale. = TRUE)
pcaDat <- as.data.frame(pcaDat$x)
pcaDat$ID <- c("TB", "EOT", "EOT", "TB", "TB", "EOT", "TB", "TB", "EOT", "EOT")
ggplot(pcaDat, aes(PC1, PC2, fill = ID )) +
geom_point(pch=21, color = 'black', size = 4)
install.packages(c("rhandsontable", "rJava", "shinydashboard", "shinydashboardPlus", "shinyWidgets", "xlsx", "zip"))
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
View(data)
data$keep <- sapply(data, function(x){
rowSums(is.finite(x))
})
data$keep <- sapply(data, function(x){
rowSums(is.finite(as.matrix(x)))
})
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- sapply(data, function(x){
rowSums(is.finite(as.matrix(x)))
})
View(data)
data$keep <- sapply(data, function(x){
return(rowSums(is.finite(as.matrix(x))))
})
View(data)
View(data)
data$keep <- sapply(data, function(x){
return(rowSums(is.numeric(as.matrix(x))))
})
data$keep <- sapply(data, function(x){
sum(x[is.finite(x)])
})
View(data)
data$keep <- apply(data, 1, function(x){
sum(x[is.finite(x)])
})
View(data)
data$keep <- apply(data, 1, function(x){
rowSums(is.na(x))
})
data$keep <- apply(data, 1, function(x){
rowSums(is.na(as.matirix(x)))
})
data$keep <- apply(data, 1, function(x){
rowSums(is.na(as.matrix(x)))
})
data$keep <- rowSums(is.na(as.matrix(data)))
View(data)
library(shiny); runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
install.packages("rJava")
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data$keep <- sapply(data, function(x){
rowSums(is.na(as.matrix(data)))
})
View(data)
data[2,3] <- NA
data$keep <- sapply(data, function(x){
rowSums(is.na(as.matrix(data)))
})
View(data)
data$keep <- sapply(data$keep, function(x) {
print(x)
})
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- rowSums(is.na(as.matrix(data)))
data %>%
filter(keep > 0)
View(data)
data = data %>%
filter(keep > 0)
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- rowSums(is.na(as.matrix(data)))
data = data %>%
filter(keep < 1)
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- rowSums(!is.na(as.matrix(data)))
data = data %>%
filter(keep < 1)
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- rowSums(!is.na(as.matrix(data)))
View(data)
View(data)
data = data %>%
filter(keep <= 3)
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- rowSums(!is.na(as.matrix(data)))
data = data %>%
filter(keep <= 3)
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- rowSums(!is.na(as.matrix(data)))
data = data %>%
filter(!keep <= 3)
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data$keep <- rowSums(!is.na(as.matrix(data)))
data = data %>%
filter(keep >= 3)
View(data)
data = data %>%
filter(keep == 3)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data[3,6] <- NA
data[3,4] <- NA
View(data)
View(data)
data$keep <- rowSums(!is.na(as.matrix(data)))
View(data)
data = data %>%
filter(!keep <= 3)
View(data)
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
View(data)
colnames(data) <- for (i in names(data)) {
i = paste(i, runif(1, 1, 100), sep = ".")
return(i)
}
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
colnames(data) <- sapply(names(data), function(i) {
paste(i, runif(1, 1, 100), sep = ".")
})
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
colnames(data) <- sapply(names(data), function(i) {
paste(i, round(runif(1, 1, 100), 1), sep = ".")
})
View(data)
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
grabName <- colnames(data)
colnames(data) <- sapply(names(data), function(i) {
paste(i, round(runif(1, 1, 100), 1), sep = ".")
})
View(data)
is.list(grabName)
is.array(grabName)
is.atomic(grabName)
colnames(data) <- grabName
View(data)
append(grabName, values = "keep", after = length(grabName))
grabName <- append(grabName, values = "keep", after = length(grabName))
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data[3,6] <- NA
data[3,4] <- NA
data$keep <- rowSums(!is.na(as.matrix(data)))
View(data)
View(data)
data = mutate(keep,
ifelse(data$keep < 4, "FALSE", "TRUE"))
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data[3,6] <- NA
data[3,4] <- NA
data$keep <- rowSums(!is.na(as.matrix(data)))
data = mutate(keep,
ifelse(data$keep < 4, "FALSE", "TRUE"))
data$keep = mutate(
ifelse(data$keep < 4, "FALSE", "TRUE"))
data = mutate(data,
keep = ifelse(data$keep < 4, "FALSE", "TRUE"))
View(data)
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
data <- data.frame(One=rnorm(10),
two=rnorm(10),
three=rnorm(10),
four=rnorm(10))
data[2,3] <- NA
data[3,6] <- NA
data[3,4] <- NA
rownames(data) <- c("row1","row2","row3","row4", "row5",
"row6","row7","row8","row9", "row10")
View(data)
data$keep <- rowSums(!is.na(as.matrix(data)))
View(data)
data = mutate(data,
keep = ifelse(data$keep < 4, "FALSE", "TRUE"))
View(data)
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
runApp('D:/Eigenaara/Documents/shinyapps/ProVision-master/Provision/ProVIsion_app.r')
